#include includes\spell_routines.inc
#turbo 20

Sub Main(int numberOfStacks)
  /declare foodSpell string outer Endless Turkeys
  /declare foodItem string outer Cooked Turkey

  /if (!${Defined[numberOfStacks]}) /declare numberOfStacks int outer 1
  /if (${numberOfStacks}<1 || ${numberOfStacks}>20) /varset numberOfStacks 1

  /echo Summoning ${numberOfStacks} stack(s) of ${foodItem}.
  /call SummonFood ${numberOfStacks}
  /echo Done summoning stuff!
/return

Sub SummonFood(int numberOfStacks)
  /echo |- SummonFood ==>

  /declare foodCount  int local ${Math.Calc[${FindItemCount[=${foodItem}]}]}
  /if (${foodCount} < ${Math.Calc[20*${numberOfStacks}]}) {
    /if (!${FindItemCount[=${foodSpell}]}) {
      /echo |- Missing item: ${foodSpell}
      /echo <== SummonFood -|
      /endmac
    }

    :BigLoop
      /varset foodCount ${Math.Calc[${FindItemCount[=${foodItem}]}]}
      /if (${FindItem[${foodSpell}].TimerReady}==0 && ${Math.Calc[20*${numberOfStacks}]}>${foodCount}) {
        :FoodLoop
          /if (!${Me.State.Equal[STAND]} || ${Cursor.ID} || ${Me.Casting.ID}) {
            /autoinv
            /delay 1s
            /goto :FoodLoop
          }
          /echo |- Summoning: ${foodItem} > ${foodCount}/${Math.Calc[20*${numberOfStacks}]}
          /call Summon "${foodSpell}"
          /autoinv
      }

      /if (${Math.Calc[20*${numberOfStacks}]}>=${Math.Calc[${FindItemCount[=${foodItem}]}]}) /goto :BigLoop
  }

  /beep .\sounds\mail1.wav
  /echo <== SummonFood -|
/return

Sub Summon(string itemName)
  /itemnotify "${itemName}" rightmouseup
  /delay 2s
  /autoinv
  /declare delay int local ${Math.Calc[${FindItem[${itemName}].TimerReady}*10]}
  /delay ${delay}
/return