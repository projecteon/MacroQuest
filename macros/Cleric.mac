#include includes\spell_routines.inc
#include includes\ini.inc
#include includes\common.inc
#include includes\commonSpell.inc
#include includes\commonCaster.inc
#include includes\commonHealer.inc
#include includes\commonBuffer.inc
#include includes\commonNuke.inc
#include includes\wait4rez.inc
#turbo 150

Sub Main
    /declare clericIniFileName        string  local "ini/${MacroQuest.Server}/Cleric_${Me.CleanName}.ini"

	/call CheckPlugin MQ2EQBC
	/call CheckPlugin MQ2NetBots
	/call CheckPlugin MQ2Moveutils
	/call CheckPlugin MQ2Cast
	/call CheckPlugin MQ2CastTimer
    /call CheckPlugin MQ2Nav

    /call InitClericIni ${clericIniFileName}

    /echo "Cleric all set!"
    /bca "Cleric all set!"
    :ClericLoop
        /call Wait4Rez_Background_Events
        /if (${Me.Invis}) /goto :ClericLoop
        /if (${Stick.Status.Equal[ON]} || ${Navigation.Active}) /goto :ClericLoop

        /call DoHeal
        /call CheckManaStatus
        /call TryMedidate
        /call DoNuke
        /call DoBuffs
        /call DoCommonEvents
        /goto :ClericLoop
/return

| ###############################################################################
| # Checks the tank and specified PC's for hitpoint levels and heals accordingly.
| # This gets called in the main loop for every healer. It is the primary point 
| # for all healing.
| ###############################################################################
Sub DoHeal
	|- Do we use a group heal?
	/call GroupAOEHeal
	
	|- Check for heals
    /call CheckHeals

/return

Sub GroupAOEHeal
    /if (${Debug} || ${Debug_Heals}) /echo |- GroupAOEHeal ==>
    /if (!${Group.Members} || ${Me.Gem[${areaGroupHeal}]} < 0 || ${Me.CurrentMana} < ${Spell[${areaGroupHeal}].Mana}) {
        /if (${Debug} || ${Debug_Heals}) /echo <== GroupAOEHeal -|
        /return
    }

    /declare groupMembersWithLowHealthCount int local 0
    /declare x int local
    /for x 1 to ${Group.Members}
        /if (${Spawn[${Group.Member[${x}]}].ID} && ${Group.Member[${x}].PctHPs} <= ${areaGroupHealPct} && ${Group.Member[${x}].Distance} <= ${Spell[${areaGroupHeal}].AERange}) {
            /varcalc groupMembersWithLowHealthCount ${groupMembersWithLowHealthCount}+1
        }
    /next x

	/if (${groupMembersWithLowHealthCount} >= ${groupHealNum}) {
		/gsay <<< ${areaGroupHeal} >>>			
		/bca <<< ${areaGroupHeal} >>>			
        /call cast "${areaGroupHeal}" gem${Me.Gem[${areaGroupHeal}]} 0 CancelGroupHeal 3
		|- Delay to give everyones hp time to update
		/delay 5
	}
    /if (${Debug} || ${Debug_Heals}) /echo <== GroupAOEHeal -|
/return


Sub CancelGroupHeal
/return

Sub InitClericIni(string iniFileName)
    /declare options            string  local "HealingOptions"
    /declare parentInitResult   int     local 1
    /declare areaGroupHeal      string  outer "GroupAOEHeal" 
    /declare areaGroupHealPct   int     outer 0
    /declare groupHealNum       int     outer 4

    /call InitGenralIni "${iniFileName}"
    /varset parentInitResult ${Macro.Return}
        
    /call InitHealIni "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /call InitBufferIni "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /call InitNukeIni "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /call InitWait4Rez "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /if (${Ini[${iniFileName},${options},AreaGroupHeal].Length}) {
        /varset areaGroupHeal "${Ini[${iniFileName},${options},AreaGroupHeal]}"
    } else {
        /ini "${iniFileName}" "${options}" "AreaGroupHeal" "${areaGroupHeal}"
    }
    
    /if (${Ini[${iniFileName},${options},AreaGroupHealPct].Length}) {
        /varset areaGroupHealPct ${Ini[${iniFileName},${options},AreaGroupHealPct]} 
    } else {
        /ini "${iniFileName}" "${options}" "AreaGroupHealPct" "${areaGroupHealPct}"
    }
    
    /if (${Ini[${iniFileName},${options},AreaGroupHealNum].Length}) {
        /varset groupHealNum ${Ini[${iniFileName},${options},AreaGroupHealNum]} 
    } else {
        /ini "${iniFileName}" "${options}" "AreaGroupHealNum" "${groupHealNum}"
    }

    /if (${parentInitResult} == 0) {
        /echo "Bootstrapped INI file, please update variables in: ${clericIniFileName}"
        /endmacro
    }

/return 