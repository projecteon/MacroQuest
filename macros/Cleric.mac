#include includes\spell_routines.inc
#include includes\ini.inc
#include includes\common.inc
#include includes\commonCaster.inc
#include includes\commonHealer.inc
#include includes\commonBuffer.inc
#include includes\commonNuke.inc
#include includes\wait4rez.inc
#turbo 40

Sub Main
    /declare clericIniFileName        string  local "ini/${MacroQuest.Server}/Cleric_${Me.CleanName}.ini"

    /call InitClericIni ${clericIniFileName}
    /if (${Macro.Return} == 0) {
        /echo "Bootstrapped INI file, please update variables in: ${clericIniFileName}"
        /endmacro
    }

    /echo "Cleric all set!"
    /bca "Cleric all set!"
    :ClericLoop
        /call Wait4Rez_Background_Events
        /if (${Me.Invis}) /goto :ClericLoop

        /call DoHeal
        | /if (${Macro.Return} == 1) /goto :ClericLoop
        /call CheckManaStatus
        /call TryMedidate
        /call DoNuke
        /call DoBuffs
        /call DoCommonEvents
        /goto :ClericLoop
/return

| ###############################################################################
| # Checks the tank and specified PC's for hitpoint levels and heals accordingly.
| # This gets called in the main loop for every healer. It is the primary point 
| # for all healing.
| ###############################################################################
Sub DoHeal
	|- Check the tank's hitpoints before we start to make sure we have time to check everyone else
   	| /call CheckTank

	|- Do we use a group heal?
	/call GroupHeal
	
	|- Check for heals
    /call CheckHeals

/return

Sub GroupHeal
    /if (!${Group.Members} || ${Me.Gem[${groupHealSpell}]} < 0 || ${Me.CurrentMana} < ${Spell[${groupHealSpell}].Mana}) {
        /return 0
    }

    /declare groupMembersWithLowHealthCount int local 0
    /declare x int local
    /for x 1 to ${Group.Members} {
        /if (${Spawn[${Group.Member[${x}]}].ID} && ${Group.Member[${x}].PctHPs} <= ${groupHealPct} && ${Group.Member[${x}].Distance} <= ${Spell[${groupHealSpell}].Range}) {
            /varset groupMembersWithLowHealthCount ${Math.Calc[${groupMembersWithLowHealthCount}+1]}
        }
        /next x
    }

	/if (${groupMembersWithLowHealthCount} >= ${groupHealNum}) {
		/gsay <<< ${groupHealSpell} >>>			
		/bca <<< ${groupHealSpell} >>>			
        /call cast "${groupHealSpell}" gem${Me.Gem[${groupHealSpell}]} 0 CancelGroupHeal 3
		|- Delay to give everyones hp time to update
		/delay 50
        /return 1
	}
/return 0


Sub CancelGroupHeal
/return

Sub InitClericIni(string iniFileName)
    /declare options            string  local "HealingOptions"
    /declare parentInitResult   int     local 1
    /declare groupHealSpell     string  outer "GroupHeal" 
    /declare groupHealPct       int     outer 0
    /declare groupHealNum       int     outer 4

    /call InitGenralIni "${iniFileName}"
    /varset parentInitResult ${Macro.Return}
        
    /call InitHealIni "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /call InitBufferIni "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /call InitNukeIni "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /call InitWait4Rez "${iniFileName}"
    /if (${Macro.Return} == 0) {
        /varset parentInitResult 0
    }
    
    /if (${Ini[${iniFileName},${options},GroupHeal].Length}) {
        /varset groupHealSpell "${Ini[${iniFileName},${options},GroupHeal]}"
    } else {
        /ini "${iniFileName}" "${options}" "GroupHeal" "${groupHealSpell}"
    }
    
    /if (${Ini[${iniFileName},${options},GroupHealPct].Length}) {
        /varset groupHealPct ${Ini[${iniFileName},${options},GroupHealPct]} 
    } else {
        /ini "${iniFileName}" "${options}" "GroupHealPct" "${groupHealPct}"
    }
    
    /if (${Ini[${iniFileName},${options},GroupHealNum].Length}) {
        /varset groupHealNum ${Ini[${iniFileName},${options},GroupHealNum]} 
    } else {
        /ini "${iniFileName}" "${options}" "GroupHealNum" "${groupHealNum}"
    }

/return ${parentInitResult}