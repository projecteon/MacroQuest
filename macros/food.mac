#include includes\spell_routines.inc
#turbo 20

Sub Main(szStacks)
  /declare DrinkSpell string outer Abundant Drink
  /declare FoodSpell string outer Abundant Food
  /declare DrinkItem string outer Summoned: Globe of Water
  /declare FoodItem string outer Summoned: Black Bread
  /declare nStacks int outer 0
  /declare Once int outer 0
  /if (${Defined[szStacks]}) /varset nStacks ${szStacks}
  /if (${nStacks}<1) /varset Once 1
  /if (${nStacks}<1 || ${nStacks}>20) /varset nStacks 1
  /if (${Once}) /echo Summoning up to 1 stack of food and drink, then ending macro.
  /if (!${Once}) /echo Summoning ${nStacks} stack(s) of food and drink per cycle.
  /call SummonDrinkFood
  /echo Done summoning stuff!
/return

Sub SummonDrinkFood
  /echo |- SummonDrinkFood ==>

  /declare foodCount  int local
  /declare drinkCount int local

  /if (${FindItemCount[=${DrinkItem}]} < ${Math.Calc[20*${nStacks}]} || ${FindItemCount[=${FoodItem}]} < ${Math.Calc[20*${nStacks}]}) {
    /if (!${Me.Gem[${DrinkSpell}]}) {
      /echo |- Missing drink spell: ${DrinkSpell}
      /echo <== SummonDrinkFood -|
      /endmac
    }

    /if (!${Me.Gem[${FoodSpell}]}) {
      /echo |- Missing food spell: ${FoodSpell}
      /echo <== SummonDrinkFood -|
      /endmac
    }

    :BigLoop
      /varset drinkCount ${Math.Calc[${FindItemCount[=${DrinkItem}]}]}      
      /if (${Me.SpellReady[${DrinkSpell}]} && ${Math.Calc[20*${nStacks}]}>${drinkCount}) {
        /echo |- DrinkLoop
        :DrinkLoop
          /if (!${Me.State.Equal[STAND]} || ${Cursor.ID} || ${Me.Casting.ID}) {
            /delay 2s
            /autoinv
            /goto :DrinkLoop
          }
          /call Summon "${DrinkSpell}" ${DrinkType}
          /autoinv
      }

      /varset foodCount ${Math.Calc[${FindItemCount[=${FoodItem}]}]}
      /if (${Me.SpellReady[${FoodSpell}]} && ${Math.Calc[20*${nStacks}]}>${foodCount}) {
        /echo |- FoodLoop
        :FoodLoop
          /if (!${Me.State.Equal[STAND]} || ${Cursor.ID} || ${Me.Casting.ID}) {
            /autoinv
            /delay 2s
            /goto :FoodLoop
          }
          /call Summon "${FoodSpell}" ${FoodType}
          /autoinv
      }

      /if (${Math.Calc[20*${nStacks}]}>=${Math.Calc[${FindItemCount[=${DrinkItem}]}+4]}) /goto :BigLoop
      /if (${Math.Calc[20*${nStacks}]}>=${Math.Calc[${FindItemCount[=${FoodItem}]}+4]}) /goto :BigLoop
  }
    
  /echo <== SummonDrinkFood -|
/return

Sub Summon(string itemSpell)
  /call cast "${itemSpell}"
  /delay 5
  /autoinv
  /delay 5
/return